{"version":3,"sources":["../../../src/components/index/index.component.ts"],"names":[],"mappings":"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","file":"index.component.js","sourceRoot":"","sourcesContent":["import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ContentChild,\r\n  TemplateRef\r\n} from '@angular/core';\r\n\r\nimport { ListSelection, ListSelectionImpl } from '../../model/list-selection';\r\nimport { difference } from '../../model/set';\r\n\r\n\r\nexport class NgxDualListboxComponent implements OnInit {\r\n   key = 'id';\r\n   items: any[];\r\n   _selectedItems: any[];\r\n   selectedItemsChange = new EventEmitter<any[]>();\r\n\r\n  // TODO: add custom properties like, display name, enable filter, enable sort\r\n   minHeight = '200px';\r\n\r\n   templateItem: TemplateRef<any>;\r\n   templateArrowLeft: TemplateRef<any>;\r\n   templateArrowRight: TemplateRef<any>;\r\n\r\n  availableItems: ListSelection;\r\n  selectedItems: ListSelection;\r\n\r\n  ngOnInit() {\r\n    this.availableItems = new ListSelectionImpl(\r\n      difference(this.items, this._selectedItems, this.key)\r\n    );\r\n    this.selectedItems = new ListSelectionImpl(this._selectedItems);\r\n  }\r\n\r\n  select() {\r\n    const { from, to } = transfer(this.availableItems, this.selectedItems);\r\n    this.availableItems = from;\r\n    this.selectedItems = to;\r\n    this.selectedItemsChange.emit(this.selectedItems.totalItems);\r\n  }\r\n\r\n  return() {\r\n    const { from, to } = transfer(this.selectedItems, this.availableItems);\r\n    this.selectedItems = from;\r\n    this.availableItems = to;\r\n    this.selectedItemsChange.emit(this.selectedItems.totalItems);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n  selector: 'ngx-dual-listbox',\r\n  styles: [\r\n    `\r\n    *{\r\n        box-sizing: border-box;\r\n    }\r\n    .container-dualListBox{\r\n        display: -webkit-box; \r\n        display: -moz-box;\r\n        display: -ms-flexbox;\r\n        display: -webkit-flex; \r\n        display: flex;\r\n\r\n        -webkit-box-align: center;\r\n        -moz-box-align: center;\r\n        -ms-flex-align: center;\r\n        -webkit-align-items: center;\r\n        align-items: center;\r\n     }\r\n     .container-dualListBox > div{\r\n             height: 100%;\r\n             max-height: 100%;\r\n             display: flex;\r\n             flex-direction: column;\r\n             place-content: flex-start;\r\n     }\r\n     .container-items{\r\n        align-items: flex-start;\r\n        width:40%;\r\n        border: 1px solid #ccc8c8;\r\n     }\r\n     .container-buttons{\r\n        align-items: center;\r\n        width:20%;\r\n     }\r\n     .btn-arrow{\r\n           border: 1px solid #afa7a7;\r\n           background: #9c9797;\r\n           color: white;\r\n           padding: 3px;\r\n           margin: 5px;\r\n           width:90px;\r\n           text-align: center;\r\n     }\r\n    .choosed{\r\n           width: 100%;\r\n           background: #91949c;\r\n           color: white;\r\n     }`\r\n  ],\r\n  template: `\r\n  <div class=\"container-dualListBox\">\r\n    <div class=\"container-items\" [style.minHeight]=\"minHeight\">\r\n      <div *ngFor=\"let item of availableItems.totalItems\" [ngClass]=\"{ choosed: availableItems.isSelected(item,1) }\" (click)=\"availableItems.select(item)\">\r\n        <div *ngIf=\"templateItem;else noTemplateItem\">\r\n          <ng-container [ngTemplateOutlet]=\"templateItem\" [ngOutletContext]=\"{ data: item }\">\r\n          </ng-container>\r\n        </div>\r\n        <ng-template #noTemplateItem>\r\n          {{item.name}}\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n    <div class=\"container-buttons\">\r\n       <div class=\"\" (click)=\"select()\">\r\n       <div *ngIf=\"templateArrowRight;else arrowRigth\">\r\n          <ng-container [ngTemplateOutlet]=\"templateArrowRight\">\r\n          </ng-container>\r\n       </div>\r\n      <ng-template #arrowRigth>\r\n        <div class=\"btn-arrow\">&rarr;</div>\r\n      </ng-template>\r\n    </div>\r\n    <div class=\"\" (click)=\"return()\">\r\n        <div *ngIf=\"templateArrowLeft;else arrowLeft\">\r\n          <ng-container [ngTemplateOutlet]=\"templateArrowLeft\">\r\n          </ng-container>\r\n        </div>\r\n        <ng-template #arrowLeft>\r\n          <div class=\"btn-arrow\">&larr;</div>\r\n        </ng-template>\r\n    </div>\r\n  </div>\r\n    <div class=\"container-items\" [style.minHeight]=\"minHeight\">\r\n      <div *ngFor=\"let item of selectedItems.totalItems\" [ngClass]=\"{ choosed: selectedItems.isSelected(item,2) }\"  (click)=\"selectedItems.select(item)\">\r\n        <div *ngIf=\"templateItem;else noTemplateItem\">\r\n          <ng-container [ngTemplateOutlet]=\"templateItem\" [ngOutletContext]=\"{ data: item }\">\r\n          </ng-container>\r\n        </div>\r\n        <ng-template #noTemplateItem>\r\n          {{item.name}}\r\n        </ng-template>\r\n      </div>\r\n    </div>\r\n</div>`\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'key': [{ type: Input },],\n'items': [{ type: Input },],\n'_selectedItems': [{ type: Input, args: ['selectedItems', ] },],\n'selectedItemsChange': [{ type: Output },],\n'minHeight': [{ type: Input },],\n'templateItem': [{ type: ContentChild, args: ['templateItem', ] },],\n'templateArrowLeft': [{ type: ContentChild, args: ['templateArrowLeft', ] },],\n'templateArrowRight': [{ type: ContentChild, args: ['templateArrowRight', ] },],\n};\n}\r\n\r\nconst transfer = (from: ListSelection, to: ListSelection) => {\r\n  return {\r\n    from: new ListSelectionImpl(\r\n      from.totalItems.filter(x => !from.isSelected(x))\r\n    ),\r\n    to: new ListSelectionImpl([...from.selectedItems, ...to.totalItems])\r\n  };\r\n};\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}