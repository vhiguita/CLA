!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("rxjs/add/operator/debounceTime"),require("rxjs/add/operator/distinctUntilChanged"),require("rxjs/add/operator/map"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","rxjs/add/operator/debounceTime","rxjs/add/operator/distinctUntilChanged","rxjs/add/operator/map","@angular/common"],t):t(e["ng2-dual-list-box"]={},e.ng.core,e.ng.forms,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.ng.common)}(this,function(e,t,l,a,o,n,i){"use strict";function s(e,t){var l="function"==typeof Symbol&&e[Symbol.iterator];if(!l)return e;var a,o,n=l.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(a=n.next()).done;)i.push(a.value)}catch(s){o={error:s}}finally{try{a&&!a.done&&(l=n["return"])&&l.call(n)}finally{if(o)throw o.error}}return i}function r(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e}var c=require("lodash.intersectionwith"),u=require("lodash.differencewith"),m=function(){function e(e){this.fb=e,this.valueField="id",this.textField="name",this.debounceTime=500,this.moveAllButton=!0,this.availableText="Available items",this.selectedText="Selected items",this.availableFilterPlaceholder="Filter...",this.selectedFilterPlaceholder="Filter...",this.onAvailableItemSelected=new t.EventEmitter,this.onSelectedItemsSelected=new t.EventEmitter,this.onItemsMoved=new t.EventEmitter,this.searchTermAvailable="",this.searchTermSelected="",this.availableItems=[],this.selectedItems=[],this.availableListBoxControl=new l.FormControl,this.selectedListBoxControl=new l.FormControl,this.availableSearchInputControl=new l.FormControl,this.selectedSearchInputControl=new l.FormControl,this._onChange=function(e){},this._onTouched=function(){},this.listBoxForm=this.fb.group({availableListBox:this.availableListBoxControl,selectedListBox:this.selectedListBoxControl,availableSearchInput:this.availableSearchInputControl,selectedSearchInput:this.selectedSearchInputControl})}return Object.defineProperty(e.prototype,"data",{set:function(e){var t=this;this.availableItems=r((e||[]).map(function(e,l){return{value:e[t.valueField].toString(),text:e[t.textField]}}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"availableSearch",{set:function(e){this.searchTermAvailable=e,this.availableSearchInputControl.setValue(e)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selectedSearch",{set:function(e){this.searchTermSelected=e,this.selectedSearchInputControl.setValue(e)},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.availableListBoxControl.valueChanges.subscribe(function(t){return e.onAvailableItemSelected.emit(t)}),this.selectedListBoxControl.valueChanges.subscribe(function(t){return e.onSelectedItemsSelected.emit(t)}),this.availableSearchInputControl.valueChanges.debounceTime(this.debounceTime).distinctUntilChanged().subscribe(function(t){return e.searchTermAvailable=t}),this.selectedSearchInputControl.valueChanges.debounceTime(this.debounceTime).distinctUntilChanged().subscribe(function(t){return e.searchTermSelected=t})},e.prototype.moveAllItemsToSelected=function(){this.availableItems.length&&(this.selectedItems=r(this.selectedItems,this.availableItems),this.availableItems=[],this.onItemsMoved.emit({available:this.availableItems,selected:this.selectedItems,movedItems:this.availableListBoxControl.value,from:"available",to:"selected"}),this.availableListBoxControl.setValue([]),this.writeValue(this.getValues()))},e.prototype.moveAllItemsToAvailable=function(){this.selectedItems.length&&(this.availableItems=r(this.availableItems,this.selectedItems),this.selectedItems=[],this.onItemsMoved.emit({available:this.availableItems,selected:this.selectedItems,movedItems:this.selectedListBoxControl.value,from:"selected",to:"available"}),this.selectedListBoxControl.setValue([]),this.writeValue([]))},e.prototype.moveMarkedAvailableItemsToSelected=function(){this.selectedItems=r(this.selectedItems,c(this.availableItems,this.availableListBoxControl.value,function(e,t){return e.value===t})),this.availableItems=r(u(this.availableItems,this.availableListBoxControl.value,function(e,t){return e.value===t})),this.onItemsMoved.emit({available:this.availableItems,selected:this.selectedItems,movedItems:this.availableListBoxControl.value,from:"available",to:"selected"}),this.availableListBoxControl.setValue([]),this.availableSearchInputControl.setValue(""),this.writeValue(this.getValues())},e.prototype.moveMarkedSelectedItemsToAvailable=function(){this.availableItems=r(this.availableItems,c(this.selectedItems,this.selectedListBoxControl.value,function(e,t){return e.value===t})),this.selectedItems=r(u(this.selectedItems,this.selectedListBoxControl.value,function(e,t){return e.value===t})),this.onItemsMoved.emit({available:this.availableItems,selected:this.selectedItems,movedItems:this.selectedListBoxControl.value,from:"selected",to:"available"}),this.selectedListBoxControl.setValue([]),this.selectedSearchInputControl.setValue(""),this.writeValue(this.getValues())},e.prototype.moveAvailableItemToSelected=function(e){this.availableItems=this.availableItems.filter(function(t){return t.value!==e.value}),this.selectedItems=r(this.selectedItems,[e]),this.onItemsMoved.emit({available:this.availableItems,selected:this.selectedItems,movedItems:[e.value],from:"available",to:"selected"}),this.availableSearchInputControl.setValue(""),this.availableListBoxControl.setValue([]),this.writeValue(this.getValues())},e.prototype.moveSelectedItemToAvailable=function(e){this.selectedItems=this.selectedItems.filter(function(t){return t.value!==e.value}),this.availableItems=r(this.availableItems,[e]),this.onItemsMoved.emit({available:this.availableItems,selected:this.selectedItems,movedItems:[e.value],from:"selected",to:"available"}),this.selectedSearchInputControl.setValue(""),this.selectedListBoxControl.setValue([]),this.writeValue(this.getValues())},e.prototype.trackByValue=function(e,t){return t[this.valueField]},e.prototype.writeValue=function(e){this.selectedItems&&e&&e.length>0&&(this.selectedItems=r(this.selectedItems,c(this.availableItems,e,function(e,t){return e.value===t})),this.availableItems=r(u(this.availableItems,e,function(e,t){return e.value===t}))),this._onChange(e)},e.prototype.registerOnChange=function(e){this._onChange=e},e.prototype.registerOnTouched=function(e){this._onTouched=e},e.prototype.getValues=function(){return(this.selectedItems||[]).map(function(e){return e.value})},e}();m.decorators=[{type:t.Component,args:[{selector:"ng2-dual-list-box",template:'<div class="row" [formGroup]="listBoxForm">\n    <div class="col-md-5 col-lg-5 col-sm-12">\n        <h4 class="text-center vertical-spacing-5">{{availableText}}</h4>\n        <input type="text" class="form-control vertical-spacing-5" placeholder="{{availableFilterPlaceholder}}"\n               formControlName="availableSearchInput" />\n        <select class="form-control list-box" formControlName="availableListBox" multiple>\n            <option *ngFor="let item of availableItems | arrayFilter:[\'text\', searchTermAvailable] | arraySort:[\'text\', \'ASC\'];trackBy:trackByValue"\n                    [value]="item?.value"\n                    (dblclick)="moveAvailableItemToSelected(item)">{{item?.text}}</option>\n        </select>\n    </div>\n    <div class="col-md-2 col-lg-2 col-sm-12 center-block text-center">\n        <button type="button"\n                class="btn btn-default col-md-8 col-md-offset-2 atr top80 sm-spacing"\n                *ngIf="moveAllButton" (click)="moveAllItemsToSelected()">\n            <span class="glyphicon glyphicon-list"></span>\n            <span class="glyphicon glyphicon-chevron-right"></span>\n        </button>\n        <button type="button"\n                class="btn btn-default col-md-8 col-md-offset-2 str vertical-spacing-5 sm-spacing"\n                [disabled]="!availableListBoxControl.value?.length"\n                (click)="moveMarkedAvailableItemsToSelected()">\n            <span class="glyphicon glyphicon-chevron-right"></span>\n        </button>\n        <button type="button"\n                class="btn btn-default col-md-8 col-md-offset-2 stl vertical-spacing-5 sm-spacing"\n                [disabled]="!selectedListBoxControl.value?.length"\n                (click)="moveMarkedSelectedItemsToAvailable()">\n            <span class="glyphicon glyphicon-chevron-left"></span>\n        </button>\n        <button type="button"\n                class="btn btn-default col-md-8 col-md-offset-2 atl bottom10 sm-spacing"\n                *ngIf="moveAllButton" (click)="moveAllItemsToAvailable()">\n            <span class="glyphicon glyphicon-chevron-left"></span>\n            <span class="glyphicon glyphicon-list"></span>\n        </button>\n    </div>\n    <div class="col-md-5 col-lg-5 col-sm-12">\n        <h4 class="text-center vertical-spacing-5">{{selectedText}}</h4>\n        <input type="text" class="form-control vertical-spacing-5" placeholder="{{selectedFilterPlaceholder}}"\n               formControlName="selectedSearchInput" />\n        <select class="form-control list-box" formControlName="selectedListBox" multiple>\n            <option *ngFor="let item of selectedItems | arrayFilter:[\'text\', searchTermSelected] | arraySort:[\'text\', \'ASC\'];trackBy:trackByValue"\n                    [value]="item?.value"\n                    (dblclick)="moveSelectedItemToAvailable(item)">{{item?.text}}</option>\n        </select>\n    </div>\n</div>',styles:[".list-box{\n    min-height:200px;\n    width:100%;\n}\n.top100{\n    margin-top:100px;\n}\n.top80{\n    margin-top:80px;\n}\n.bottom10{\n    margin-bottom:10px;\n}\n.vertical-spacing-5{\n    margin-top:5px;\n    margin-bottom:5px;\n}\n.center-block{\n    min-height:50px;\n}\n@media only screen and (max-width : 768px){\n    .sm-spacing{\n        margin-top:10px;\n        margin-bottom:10px;\n    }\n}\n@media only screen and (min-width : 768px) and (max-width : 992px){\n    .sm-spacing{\n        margin-top:10px;\n        margin-bottom:10px;\n    }\n}\n@media only screen and (max-width : 480px){\n    .sm-spacing{\n        margin-top:10px;\n        margin-bottom:10px;\n    }\n}"],providers:[{provide:l.NG_VALUE_ACCESSOR,useExisting:t.forwardRef(function(){return m}),multi:!0}]}]}],m.ctorParameters=function(){return[{type:l.FormBuilder}]},m.propDecorators={data:[{type:t.Input}],availableSearch:[{type:t.Input}],selectedSearch:[{type:t.Input}],valueField:[{type:t.Input}],textField:[{type:t.Input}],title:[{type:t.Input}],debounceTime:[{type:t.Input}],moveAllButton:[{type:t.Input}],availableText:[{type:t.Input}],selectedText:[{type:t.Input}],availableFilterPlaceholder:[{type:t.Input}],selectedFilterPlaceholder:[{type:t.Input}],onAvailableItemSelected:[{type:t.Output}],onSelectedItemsSelected:[{type:t.Output}],onItemsMoved:[{type:t.Output}]};var d=require("lodash.orderby"),h=function(){};h.direction={ASC:"ASC",DESC:"DESC"};var p=function(){function e(){}return e.prototype.transform=function(e,t){if(e=e||[],void 0===t||2!==t.length)return e;var l=s(t,2),a=l[0],o=l[1];return o!==h.direction.ASC&&o!==h.direction.DESC?e:d(e,function(e){return e.hasOwnProperty(a)?e[a]:e},o.toLowerCase())},e}();p.decorators=[{type:t.Pipe,args:[{name:"arraySort"}]}],p.ctorParameters=function(){return[]};var v=function(){function e(){}return e.prototype.transform=function(e,t){if(e=e||[],void 0===t||2!==t.length)return e;var l=s(t,2),a=l[0],o=l[1];return""===o.trim()?e:e.filter(function(e){return e[a].toString().toLowerCase().search(o.toLowerCase().trim())>=0})},e}();v.decorators=[{type:t.Pipe,args:[{name:"arrayFilter"}]}],v.ctorParameters=function(){return[]};var b=function(){function e(){}return e.forRoot=function(){return{ngModule:e}},e}();b.decorators=[{type:t.NgModule,args:[{imports:[i.CommonModule,l.ReactiveFormsModule],declarations:[p,v,m],exports:[p,v,m]}]}],b.ctorParameters=function(){return[]},e.DualListBoxModule=b,e.DualListBoxComponent=m,e.SortOptions=h,e.ArraySortPipe=p,e.ArrayFilterPipe=v,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ng2-dual-list-box.umd.min.js.map
